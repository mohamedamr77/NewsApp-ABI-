how to display response in run ?
1) add dio package
2) make directory services
3) put file name_service such in directory services  such as:
                   import 'package:dio/dio.dart';
                   class NewsService {
                     final Dio dio;

                     NewsService({required this.dio});

                     void getGeneralNews() async {
                       final response = await dio.get(
                           'https://newsapi.org/v2/everything?apiKey=08433c8dda43458fa30826408cb8219e&q=bitcoin');
                       print(response);
                     }
                   }
4) put in class main :
               final dio = Dio();
                 NewsService requestNews =NewsService(dio: dio);
                 requestNews.getNews()  ;



            ----------------------------------------------------------------

 example in asyanc and  await :
 void main()async{
      print(await MyAge());
 }

 Future<String> MyAge()async {
     var age=await DelayedDisplayAge();
     return "Myn Age is $age";
 }
  Future<int> DelayedDisplayAge()=>
   Future.delayed(Duration(seconds: 2),()=> 21,);

                          ----------------------------------------------------------------

    import 'package:dio/dio.dart';

                        final dio = Dio();

                        void getHttp() async {
                          final response = await dio.get('https://dart.dev');
                          print(response);
                        }

import 'package:dio/dio.dart';
import 'package:news/widget/articalmodel.dart';
class NewsService{
  Dio dio;
    NewsService({required this.dio });

  void getNews() async {
    final Response response = await dio.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=08433c8dda43458fa30826408cb8219e');

    Map<String, dynamic> jsonData = response.data;

    List<dynamic> articles = jsonData["articles"];

    List<ArticleModel> articlesList = [];

    for (int i = 0; i < articles.length; i++) {
      ArticleModel articleModel=ArticleModel(
          image: articles[i]["image"],
          title: articles[i]["title"],
          description: articles[i]["description"],
      );
      articlesList.add(articleModel);
    }

    print(articlesList);
  }
}

/*
import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:news/services/news_service.dart';
import 'package:news/model/articalmodel.dart';
import 'CircularProgressIndicator_item.dart';
import 'news_item.dart';

class NewsListView extends StatefulWidget {
  const NewsListView({super.key});

  @override
  State<NewsListView> createState() => _NewsListViewState();
}

class _NewsListViewState extends State<NewsListView> {

  List<ArticleModel> articles=[];

  bool isLoading=true;
    @override
  void initState() {
    GetNews();
    super.initState();
  }

  Future<void> GetNews() async{
     articles=await NewsService(dio: Dio()).GetNews();
     isLoading=false ;
     setState(() {
     });
  }

  @override
  Widget build(BuildContext context) {
    return
      isLoading==true ?
      CustomCircularProgressIndicator()
          :
      SliverList.separated(
      itemBuilder: (context, index) => News(
        articleModel: articles[index],
      ),
      itemCount: articles.length,
      separatorBuilder: (context, index) => SizedBox(height: 8,),
    );
  }
}


*/



/*
  List<ArticleModel> articles = [];

  bool isLoading=true;

  Future<void> GetNews() async{
    if(widget.index==0)
    {
      articles=await NewsService(dio: Dio()).GetBusinessNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==1){
      articles=await NewsService(dio: Dio()).GetEntertainmentNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==2){
      articles=await NewsService(dio: Dio()).GetGeneralNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==3){
      articles=await NewsService(dio: Dio()).GetHealthNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==4){
      articles=await NewsService(dio: Dio()).GetScienceNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==5){
      articles=await NewsService(dio: Dio()).GetSportsNews();
      isLoading=false ;
      setState(() {
      });
    }
    else if(widget.index==6){
      articles=await NewsService(dio: Dio()).GetTechnologyNews();
      isLoading=false ;
      setState(() {
      });

    }
  }

  void initState() {
    GetNews();
    super.initState();
  }

*/